ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	NMI_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB132:
  28              		.file 1 "Core/Src/stm32l4xx_it.c"
   1:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32l4xx_it.c **** /**
   3:Core/Src/stm32l4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32l4xx_it.c ****   * @file    stm32l4xx_it.c
   5:Core/Src/stm32l4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32l4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32l4xx_it.c ****   * @attention
   8:Core/Src/stm32l4xx_it.c ****   *
   9:Core/Src/stm32l4xx_it.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32l4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32l4xx_it.c ****   *
  12:Core/Src/stm32l4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32l4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32l4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32l4xx_it.c ****   *
  16:Core/Src/stm32l4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32l4xx_it.c ****   */
  18:Core/Src/stm32l4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32l4xx_it.c **** 
  20:Core/Src/stm32l4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32l4xx_it.c **** #include "main.h"
  22:Core/Src/stm32l4xx_it.c **** #include "stm32l4xx_it.h"
  23:Core/Src/stm32l4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32l4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32l4xx_it.c **** 
  27:Core/Src/stm32l4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32l4xx_it.c **** 
  30:Core/Src/stm32l4xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 2


  31:Core/Src/stm32l4xx_it.c **** 
  32:Core/Src/stm32l4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32l4xx_it.c **** 
  35:Core/Src/stm32l4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32l4xx_it.c **** 
  37:Core/Src/stm32l4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32l4xx_it.c **** 
  40:Core/Src/stm32l4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32l4xx_it.c **** 
  42:Core/Src/stm32l4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32l4xx_it.c **** 
  45:Core/Src/stm32l4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32l4xx_it.c **** 
  47:Core/Src/stm32l4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32l4xx_it.c **** 
  50:Core/Src/stm32l4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32l4xx_it.c **** 
  52:Core/Src/stm32l4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32l4xx_it.c **** extern void my_Uart_isr (UART_HandleTypeDef *huart);
  55:Core/Src/stm32l4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32l4xx_it.c **** 
  57:Core/Src/stm32l4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32l4xx_it.c **** extern SPI_HandleTypeDef hspi2;
  59:Core/Src/stm32l4xx_it.c **** extern SPI_HandleTypeDef hspi3;
  60:Core/Src/stm32l4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  61:Core/Src/stm32l4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  62:Core/Src/stm32l4xx_it.c **** extern DMA_HandleTypeDef hdma_usart3_rx;
  63:Core/Src/stm32l4xx_it.c **** extern DMA_HandleTypeDef hdma_usart3_tx;
  64:Core/Src/stm32l4xx_it.c **** extern UART_HandleTypeDef huart1;
  65:Core/Src/stm32l4xx_it.c **** extern UART_HandleTypeDef huart3;
  66:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN EV */
  67:Core/Src/stm32l4xx_it.c **** 
  68:Core/Src/stm32l4xx_it.c **** /* USER CODE END EV */
  69:Core/Src/stm32l4xx_it.c **** 
  70:Core/Src/stm32l4xx_it.c **** /******************************************************************************/
  71:Core/Src/stm32l4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  72:Core/Src/stm32l4xx_it.c **** /******************************************************************************/
  73:Core/Src/stm32l4xx_it.c **** /**
  74:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  75:Core/Src/stm32l4xx_it.c ****   */
  76:Core/Src/stm32l4xx_it.c **** void NMI_Handler(void)
  77:Core/Src/stm32l4xx_it.c **** {
  29              		.loc 1 77 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  78:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32l4xx_it.c **** 
  80:Core/Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 3


  81:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  82:Core/Src/stm32l4xx_it.c ****   while (1)
  36              		.loc 1 82 3 discriminator 1 view .LVU1
  83:Core/Src/stm32l4xx_it.c ****   {
  84:Core/Src/stm32l4xx_it.c ****   }
  37              		.loc 1 84 3 discriminator 1 view .LVU2
  82:Core/Src/stm32l4xx_it.c ****   {
  38              		.loc 1 82 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE132:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB133:
  85:Core/Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  86:Core/Src/stm32l4xx_it.c **** }
  87:Core/Src/stm32l4xx_it.c **** 
  88:Core/Src/stm32l4xx_it.c **** /**
  89:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  90:Core/Src/stm32l4xx_it.c ****   */
  91:Core/Src/stm32l4xx_it.c **** void HardFault_Handler(void)
  92:Core/Src/stm32l4xx_it.c **** {
  52              		.loc 1 92 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  93:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  94:Core/Src/stm32l4xx_it.c **** 
  95:Core/Src/stm32l4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  96:Core/Src/stm32l4xx_it.c ****   while (1)
  59              		.loc 1 96 3 discriminator 1 view .LVU5
  97:Core/Src/stm32l4xx_it.c ****   {
  98:Core/Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  99:Core/Src/stm32l4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 100:Core/Src/stm32l4xx_it.c ****   }
  60              		.loc 1 100 3 discriminator 1 view .LVU6
  96:Core/Src/stm32l4xx_it.c ****   {
  61              		.loc 1 96 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE133:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB134:
ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 4


 101:Core/Src/stm32l4xx_it.c **** }
 102:Core/Src/stm32l4xx_it.c **** 
 103:Core/Src/stm32l4xx_it.c **** /**
 104:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Memory management fault.
 105:Core/Src/stm32l4xx_it.c ****   */
 106:Core/Src/stm32l4xx_it.c **** void MemManage_Handler(void)
 107:Core/Src/stm32l4xx_it.c **** {
  75              		.loc 1 107 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 108:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 109:Core/Src/stm32l4xx_it.c **** 
 110:Core/Src/stm32l4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 111:Core/Src/stm32l4xx_it.c ****   while (1)
  82              		.loc 1 111 3 discriminator 1 view .LVU9
 112:Core/Src/stm32l4xx_it.c ****   {
 113:Core/Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 114:Core/Src/stm32l4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 115:Core/Src/stm32l4xx_it.c ****   }
  83              		.loc 1 115 3 discriminator 1 view .LVU10
 111:Core/Src/stm32l4xx_it.c ****   {
  84              		.loc 1 111 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE134:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB135:
 116:Core/Src/stm32l4xx_it.c **** }
 117:Core/Src/stm32l4xx_it.c **** 
 118:Core/Src/stm32l4xx_it.c **** /**
 119:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 120:Core/Src/stm32l4xx_it.c ****   */
 121:Core/Src/stm32l4xx_it.c **** void BusFault_Handler(void)
 122:Core/Src/stm32l4xx_it.c **** {
  98              		.loc 1 122 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 123:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 124:Core/Src/stm32l4xx_it.c **** 
 125:Core/Src/stm32l4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 126:Core/Src/stm32l4xx_it.c ****   while (1)
 105              		.loc 1 126 3 discriminator 1 view .LVU13
 127:Core/Src/stm32l4xx_it.c ****   {
ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 5


 128:Core/Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 129:Core/Src/stm32l4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 130:Core/Src/stm32l4xx_it.c ****   }
 106              		.loc 1 130 3 discriminator 1 view .LVU14
 126:Core/Src/stm32l4xx_it.c ****   {
 107              		.loc 1 126 9 discriminator 1 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE135:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB136:
 131:Core/Src/stm32l4xx_it.c **** }
 132:Core/Src/stm32l4xx_it.c **** 
 133:Core/Src/stm32l4xx_it.c **** /**
 134:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 135:Core/Src/stm32l4xx_it.c ****   */
 136:Core/Src/stm32l4xx_it.c **** void UsageFault_Handler(void)
 137:Core/Src/stm32l4xx_it.c **** {
 121              		.loc 1 137 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 138:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 139:Core/Src/stm32l4xx_it.c **** 
 140:Core/Src/stm32l4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 141:Core/Src/stm32l4xx_it.c ****   while (1)
 128              		.loc 1 141 3 discriminator 1 view .LVU17
 142:Core/Src/stm32l4xx_it.c ****   {
 143:Core/Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 144:Core/Src/stm32l4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 145:Core/Src/stm32l4xx_it.c ****   }
 129              		.loc 1 145 3 discriminator 1 view .LVU18
 141:Core/Src/stm32l4xx_it.c ****   {
 130              		.loc 1 141 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE136:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB137:
 146:Core/Src/stm32l4xx_it.c **** }
 147:Core/Src/stm32l4xx_it.c **** 
 148:Core/Src/stm32l4xx_it.c **** /**
ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 6


 149:Core/Src/stm32l4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 150:Core/Src/stm32l4xx_it.c ****   */
 151:Core/Src/stm32l4xx_it.c **** void SVC_Handler(void)
 152:Core/Src/stm32l4xx_it.c **** {
 144              		.loc 1 152 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 153:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 154:Core/Src/stm32l4xx_it.c **** 
 155:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 156:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 157:Core/Src/stm32l4xx_it.c **** 
 158:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 159:Core/Src/stm32l4xx_it.c **** }
 149              		.loc 1 159 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE137:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DebugMon_Handler:
 162              	.LFB138:
 160:Core/Src/stm32l4xx_it.c **** 
 161:Core/Src/stm32l4xx_it.c **** /**
 162:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Debug monitor.
 163:Core/Src/stm32l4xx_it.c ****   */
 164:Core/Src/stm32l4xx_it.c **** void DebugMon_Handler(void)
 165:Core/Src/stm32l4xx_it.c **** {
 163              		.loc 1 165 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 166:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 167:Core/Src/stm32l4xx_it.c **** 
 168:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 169:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 170:Core/Src/stm32l4xx_it.c **** 
 171:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 172:Core/Src/stm32l4xx_it.c **** }
 168              		.loc 1 172 1 view .LVU23
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE138:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	PendSV_Handler:
ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 7


 181              	.LFB139:
 173:Core/Src/stm32l4xx_it.c **** 
 174:Core/Src/stm32l4xx_it.c **** /**
 175:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Pendable request for system service.
 176:Core/Src/stm32l4xx_it.c ****   */
 177:Core/Src/stm32l4xx_it.c **** void PendSV_Handler(void)
 178:Core/Src/stm32l4xx_it.c **** {
 182              		.loc 1 178 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 179:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 180:Core/Src/stm32l4xx_it.c **** 
 181:Core/Src/stm32l4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 182:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 183:Core/Src/stm32l4xx_it.c **** 
 184:Core/Src/stm32l4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 185:Core/Src/stm32l4xx_it.c **** }
 187              		.loc 1 185 1 view .LVU25
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE139:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SysTick_Handler:
 200              	.LFB140:
 186:Core/Src/stm32l4xx_it.c **** 
 187:Core/Src/stm32l4xx_it.c **** /**
 188:Core/Src/stm32l4xx_it.c ****   * @brief This function handles System tick timer.
 189:Core/Src/stm32l4xx_it.c ****   */
 190:Core/Src/stm32l4xx_it.c **** void SysTick_Handler(void)
 191:Core/Src/stm32l4xx_it.c **** {
 201              		.loc 1 191 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI0:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 192:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 193:Core/Src/stm32l4xx_it.c **** 
 194:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 195:Core/Src/stm32l4xx_it.c ****   HAL_IncTick();
 210              		.loc 1 195 3 view .LVU27
 211 0002 FFF7FEFF 		bl	HAL_IncTick
 212              	.LVL0:
 196:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 197:Core/Src/stm32l4xx_it.c **** 
 198:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 199:Core/Src/stm32l4xx_it.c **** }
ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 8


 213              		.loc 1 199 1 is_stmt 0 view .LVU28
 214 0006 08BD     		pop	{r3, pc}
 215              		.cfi_endproc
 216              	.LFE140:
 218              		.section	.text.DMA1_Channel2_IRQHandler,"ax",%progbits
 219              		.align	1
 220              		.global	DMA1_Channel2_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 225              	DMA1_Channel2_IRQHandler:
 226              	.LFB141:
 200:Core/Src/stm32l4xx_it.c **** 
 201:Core/Src/stm32l4xx_it.c **** /******************************************************************************/
 202:Core/Src/stm32l4xx_it.c **** /* STM32L4xx Peripheral Interrupt Handlers                                    */
 203:Core/Src/stm32l4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 204:Core/Src/stm32l4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 205:Core/Src/stm32l4xx_it.c **** /* please refer to the startup file (startup_stm32l4xx.s).                    */
 206:Core/Src/stm32l4xx_it.c **** /******************************************************************************/
 207:Core/Src/stm32l4xx_it.c **** 
 208:Core/Src/stm32l4xx_it.c **** /**
 209:Core/Src/stm32l4xx_it.c ****   * @brief This function handles DMA1 channel2 global interrupt.
 210:Core/Src/stm32l4xx_it.c ****   */
 211:Core/Src/stm32l4xx_it.c **** void DMA1_Channel2_IRQHandler(void)
 212:Core/Src/stm32l4xx_it.c **** {
 227              		.loc 1 212 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231 0000 08B5     		push	{r3, lr}
 232              	.LCFI1:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 3, -8
 235              		.cfi_offset 14, -4
 213:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */
 214:Core/Src/stm32l4xx_it.c **** 
 215:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 0 */
 216:Core/Src/stm32l4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart3_tx);
 236              		.loc 1 216 3 view .LVU30
 237 0002 0248     		ldr	r0, .L18
 238 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 239              	.LVL1:
 217:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 1 */
 218:Core/Src/stm32l4xx_it.c **** 
 219:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 1 */
 220:Core/Src/stm32l4xx_it.c **** }
 240              		.loc 1 220 1 is_stmt 0 view .LVU31
 241 0008 08BD     		pop	{r3, pc}
 242              	.L19:
 243 000a 00BF     		.align	2
 244              	.L18:
 245 000c 00000000 		.word	hdma_usart3_tx
 246              		.cfi_endproc
 247              	.LFE141:
 249              		.section	.text.DMA1_Channel3_IRQHandler,"ax",%progbits
 250              		.align	1
 251              		.global	DMA1_Channel3_IRQHandler
ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 9


 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	DMA1_Channel3_IRQHandler:
 257              	.LFB142:
 221:Core/Src/stm32l4xx_it.c **** 
 222:Core/Src/stm32l4xx_it.c **** /**
 223:Core/Src/stm32l4xx_it.c ****   * @brief This function handles DMA1 channel3 global interrupt.
 224:Core/Src/stm32l4xx_it.c ****   */
 225:Core/Src/stm32l4xx_it.c **** void DMA1_Channel3_IRQHandler(void)
 226:Core/Src/stm32l4xx_it.c **** {
 258              		.loc 1 226 1 is_stmt 1 view -0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262 0000 08B5     		push	{r3, lr}
 263              	.LCFI2:
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 3, -8
 266              		.cfi_offset 14, -4
 227:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */
 228:Core/Src/stm32l4xx_it.c **** 
 229:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 0 */
 230:Core/Src/stm32l4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart3_rx);
 267              		.loc 1 230 3 view .LVU33
 268 0002 0248     		ldr	r0, .L22
 269 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 270              	.LVL2:
 231:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 1 */
 232:Core/Src/stm32l4xx_it.c **** 
 233:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 1 */
 234:Core/Src/stm32l4xx_it.c **** }
 271              		.loc 1 234 1 is_stmt 0 view .LVU34
 272 0008 08BD     		pop	{r3, pc}
 273              	.L23:
 274 000a 00BF     		.align	2
 275              	.L22:
 276 000c 00000000 		.word	hdma_usart3_rx
 277              		.cfi_endproc
 278              	.LFE142:
 280              		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
 281              		.align	1
 282              		.global	DMA1_Channel4_IRQHandler
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 287              	DMA1_Channel4_IRQHandler:
 288              	.LFB143:
 235:Core/Src/stm32l4xx_it.c **** 
 236:Core/Src/stm32l4xx_it.c **** /**
 237:Core/Src/stm32l4xx_it.c ****   * @brief This function handles DMA1 channel4 global interrupt.
 238:Core/Src/stm32l4xx_it.c ****   */
 239:Core/Src/stm32l4xx_it.c **** void DMA1_Channel4_IRQHandler(void)
 240:Core/Src/stm32l4xx_it.c **** {
 289              		.loc 1 240 1 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 10


 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293 0000 08B5     		push	{r3, lr}
 294              	.LCFI3:
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 3, -8
 297              		.cfi_offset 14, -4
 241:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */
 242:Core/Src/stm32l4xx_it.c **** 
 243:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 0 */
 244:Core/Src/stm32l4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 298              		.loc 1 244 3 view .LVU36
 299 0002 0248     		ldr	r0, .L26
 300 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 301              	.LVL3:
 245:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */
 246:Core/Src/stm32l4xx_it.c **** 
 247:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 1 */
 248:Core/Src/stm32l4xx_it.c **** }
 302              		.loc 1 248 1 is_stmt 0 view .LVU37
 303 0008 08BD     		pop	{r3, pc}
 304              	.L27:
 305 000a 00BF     		.align	2
 306              	.L26:
 307 000c 00000000 		.word	hdma_usart1_tx
 308              		.cfi_endproc
 309              	.LFE143:
 311              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 312              		.align	1
 313              		.global	DMA1_Channel5_IRQHandler
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 318              	DMA1_Channel5_IRQHandler:
 319              	.LFB144:
 249:Core/Src/stm32l4xx_it.c **** 
 250:Core/Src/stm32l4xx_it.c **** /**
 251:Core/Src/stm32l4xx_it.c ****   * @brief This function handles DMA1 channel5 global interrupt.
 252:Core/Src/stm32l4xx_it.c ****   */
 253:Core/Src/stm32l4xx_it.c **** void DMA1_Channel5_IRQHandler(void)
 254:Core/Src/stm32l4xx_it.c **** {
 320              		.loc 1 254 1 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 08B5     		push	{r3, lr}
 325              	.LCFI4:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
 255:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
 256:Core/Src/stm32l4xx_it.c **** 
 257:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 0 */
 258:Core/Src/stm32l4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 329              		.loc 1 258 3 view .LVU39
 330 0002 0248     		ldr	r0, .L30
 331 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 332              	.LVL4:
ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 11


 259:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
 260:Core/Src/stm32l4xx_it.c **** 
 261:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 1 */
 262:Core/Src/stm32l4xx_it.c **** }
 333              		.loc 1 262 1 is_stmt 0 view .LVU40
 334 0008 08BD     		pop	{r3, pc}
 335              	.L31:
 336 000a 00BF     		.align	2
 337              	.L30:
 338 000c 00000000 		.word	hdma_usart1_rx
 339              		.cfi_endproc
 340              	.LFE144:
 342              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 343              		.align	1
 344              		.global	EXTI9_5_IRQHandler
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 349              	EXTI9_5_IRQHandler:
 350              	.LFB145:
 263:Core/Src/stm32l4xx_it.c **** 
 264:Core/Src/stm32l4xx_it.c **** /**
 265:Core/Src/stm32l4xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 266:Core/Src/stm32l4xx_it.c ****   */
 267:Core/Src/stm32l4xx_it.c **** void EXTI9_5_IRQHandler(void)
 268:Core/Src/stm32l4xx_it.c **** {
 351              		.loc 1 268 1 is_stmt 1 view -0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355 0000 08B5     		push	{r3, lr}
 356              	.LCFI5:
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 3, -8
 359              		.cfi_offset 14, -4
 269:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 270:Core/Src/stm32l4xx_it.c **** 
 271:Core/Src/stm32l4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 272:Core/Src/stm32l4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(SPSGRF_915_GPIO3_EXTI5_Pin);
 360              		.loc 1 272 3 view .LVU42
 361 0002 2020     		movs	r0, #32
 362 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 363              	.LVL5:
 273:Core/Src/stm32l4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(SPBTLE_RF_IRQ_EXTI6_Pin);
 364              		.loc 1 273 3 view .LVU43
 365 0008 4020     		movs	r0, #64
 366 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 367              	.LVL6:
 274:Core/Src/stm32l4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(VL53L0X_GPIO1_EXTI7_Pin);
 368              		.loc 1 274 3 view .LVU44
 369 000e 8020     		movs	r0, #128
 370 0010 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 371              	.LVL7:
 275:Core/Src/stm32l4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(LSM3MDL_DRDY_EXTI8_Pin);
 372              		.loc 1 275 3 view .LVU45
 373 0014 4FF48070 		mov	r0, #256
 374 0018 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 12


 375              	.LVL8:
 276:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 277:Core/Src/stm32l4xx_it.c **** 
 278:Core/Src/stm32l4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 279:Core/Src/stm32l4xx_it.c **** }
 376              		.loc 1 279 1 is_stmt 0 view .LVU46
 377 001c 08BD     		pop	{r3, pc}
 378              		.cfi_endproc
 379              	.LFE145:
 381              		.section	.text.SPI2_IRQHandler,"ax",%progbits
 382              		.align	1
 383              		.global	SPI2_IRQHandler
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 388              	SPI2_IRQHandler:
 389              	.LFB146:
 280:Core/Src/stm32l4xx_it.c **** 
 281:Core/Src/stm32l4xx_it.c **** /**
 282:Core/Src/stm32l4xx_it.c ****   * @brief This function handles SPI2 global interrupt.
 283:Core/Src/stm32l4xx_it.c ****   */
 284:Core/Src/stm32l4xx_it.c **** void SPI2_IRQHandler(void)
 285:Core/Src/stm32l4xx_it.c **** {
 390              		.loc 1 285 1 is_stmt 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394 0000 08B5     		push	{r3, lr}
 395              	.LCFI6:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 3, -8
 398              		.cfi_offset 14, -4
 286:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 0 */
 287:Core/Src/stm32l4xx_it.c **** 
 288:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SPI2_IRQn 0 */
 289:Core/Src/stm32l4xx_it.c ****   HAL_SPI_IRQHandler(&hspi2);
 399              		.loc 1 289 3 view .LVU48
 400 0002 0248     		ldr	r0, .L36
 401 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 402              	.LVL9:
 290:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 1 */
 291:Core/Src/stm32l4xx_it.c **** 
 292:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SPI2_IRQn 1 */
 293:Core/Src/stm32l4xx_it.c **** }
 403              		.loc 1 293 1 is_stmt 0 view .LVU49
 404 0008 08BD     		pop	{r3, pc}
 405              	.L37:
 406 000a 00BF     		.align	2
 407              	.L36:
 408 000c 00000000 		.word	hspi2
 409              		.cfi_endproc
 410              	.LFE146:
 412              		.section	.text.USART3_IRQHandler,"ax",%progbits
 413              		.align	1
 414              		.global	USART3_IRQHandler
 415              		.syntax unified
 416              		.thumb
ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 13


 417              		.thumb_func
 419              	USART3_IRQHandler:
 420              	.LFB147:
 294:Core/Src/stm32l4xx_it.c **** 
 295:Core/Src/stm32l4xx_it.c **** /**
 296:Core/Src/stm32l4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 297:Core/Src/stm32l4xx_it.c ****   */
 298:Core/Src/stm32l4xx_it.c **** //void USART1_IRQHandler(void)
 299:Core/Src/stm32l4xx_it.c **** //{
 300:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 301:Core/Src/stm32l4xx_it.c ****   //my_Uart_isr (&huart1);
 302:Core/Src/stm32l4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 303:Core/Src/stm32l4xx_it.c ****   //HAL_UART_IRQHandler(&huart1);
 304:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 305:Core/Src/stm32l4xx_it.c **** 
 306:Core/Src/stm32l4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 307:Core/Src/stm32l4xx_it.c **** //}
 308:Core/Src/stm32l4xx_it.c **** 
 309:Core/Src/stm32l4xx_it.c **** /**
 310:Core/Src/stm32l4xx_it.c ****   * @brief This function handles USART3 global interrupt.
 311:Core/Src/stm32l4xx_it.c ****   */
 312:Core/Src/stm32l4xx_it.c **** void USART3_IRQHandler(void)
 313:Core/Src/stm32l4xx_it.c **** {
 421              		.loc 1 313 1 is_stmt 1 view -0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425 0000 08B5     		push	{r3, lr}
 426              	.LCFI7:
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 3, -8
 429              		.cfi_offset 14, -4
 314:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 315:Core/Src/stm32l4xx_it.c ****   //my_Uart_isr (&huart3);
 316:Core/Src/stm32l4xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 317:Core/Src/stm32l4xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 430              		.loc 1 317 3 view .LVU51
 431 0002 0248     		ldr	r0, .L40
 432 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 433              	.LVL10:
 318:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 319:Core/Src/stm32l4xx_it.c **** 
 320:Core/Src/stm32l4xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 321:Core/Src/stm32l4xx_it.c **** }
 434              		.loc 1 321 1 is_stmt 0 view .LVU52
 435 0008 08BD     		pop	{r3, pc}
 436              	.L41:
 437 000a 00BF     		.align	2
 438              	.L40:
 439 000c 00000000 		.word	huart3
 440              		.cfi_endproc
 441              	.LFE147:
 443              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 444              		.align	1
 445              		.global	EXTI15_10_IRQHandler
 446              		.syntax unified
 447              		.thumb
ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 14


 448              		.thumb_func
 450              	EXTI15_10_IRQHandler:
 451              	.LFB148:
 322:Core/Src/stm32l4xx_it.c **** 
 323:Core/Src/stm32l4xx_it.c **** /**
 324:Core/Src/stm32l4xx_it.c ****   * @brief This function handles EXTI line[15:10] interrupts.
 325:Core/Src/stm32l4xx_it.c ****   */
 326:Core/Src/stm32l4xx_it.c **** void EXTI15_10_IRQHandler(void)
 327:Core/Src/stm32l4xx_it.c **** {
 452              		.loc 1 327 1 is_stmt 1 view -0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456 0000 08B5     		push	{r3, lr}
 457              	.LCFI8:
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 3, -8
 460              		.cfi_offset 14, -4
 328:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 0 */
 329:Core/Src/stm32l4xx_it.c **** 
 330:Core/Src/stm32l4xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 0 */
 331:Core/Src/stm32l4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(LPS22HB_INT_DRDY_EXTI0_Pin);
 461              		.loc 1 331 3 view .LVU54
 462 0002 4FF48060 		mov	r0, #1024
 463 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 464              	.LVL11:
 332:Core/Src/stm32l4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(LSM6DSL_INT1_EXTI11_Pin);
 465              		.loc 1 332 3 view .LVU55
 466 000a 4FF40060 		mov	r0, #2048
 467 000e FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 468              	.LVL12:
 333:Core/Src/stm32l4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(BUTTON_EXTI13_Pin);
 469              		.loc 1 333 3 view .LVU56
 470 0012 4FF40050 		mov	r0, #8192
 471 0016 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 472              	.LVL13:
 334:Core/Src/stm32l4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(ARD_D2_Pin);
 473              		.loc 1 334 3 view .LVU57
 474 001a 4FF48040 		mov	r0, #16384
 475 001e FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 476              	.LVL14:
 335:Core/Src/stm32l4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(HTS221_DRDY_EXTI15_Pin);
 477              		.loc 1 335 3 view .LVU58
 478 0022 4FF40040 		mov	r0, #32768
 479 0026 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 480              	.LVL15:
 336:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 1 */
 337:Core/Src/stm32l4xx_it.c **** 
 338:Core/Src/stm32l4xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 1 */
 339:Core/Src/stm32l4xx_it.c **** }
 481              		.loc 1 339 1 is_stmt 0 view .LVU59
 482 002a 08BD     		pop	{r3, pc}
 483              		.cfi_endproc
 484              	.LFE148:
 486              		.section	.text.SPI3_IRQHandler,"ax",%progbits
 487              		.align	1
 488              		.global	SPI3_IRQHandler
ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 15


 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 493              	SPI3_IRQHandler:
 494              	.LFB149:
 340:Core/Src/stm32l4xx_it.c **** 
 341:Core/Src/stm32l4xx_it.c **** /**
 342:Core/Src/stm32l4xx_it.c ****   * @brief This function handles SPI3 global interrupt.
 343:Core/Src/stm32l4xx_it.c ****   */
 344:Core/Src/stm32l4xx_it.c **** void SPI3_IRQHandler(void)
 345:Core/Src/stm32l4xx_it.c **** {
 495              		.loc 1 345 1 is_stmt 1 view -0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499 0000 08B5     		push	{r3, lr}
 500              	.LCFI9:
 501              		.cfi_def_cfa_offset 8
 502              		.cfi_offset 3, -8
 503              		.cfi_offset 14, -4
 346:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SPI3_IRQn 0 */
 347:Core/Src/stm32l4xx_it.c ****   //my_spi_isr (&hspi3);
 348:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SPI3_IRQn 0 */
 349:Core/Src/stm32l4xx_it.c ****   HAL_SPI_IRQHandler(&hspi3);
 504              		.loc 1 349 3 view .LVU61
 505 0002 0248     		ldr	r0, .L46
 506 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 507              	.LVL16:
 350:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SPI3_IRQn 1 */
 351:Core/Src/stm32l4xx_it.c **** 
 352:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SPI3_IRQn 1 */
 353:Core/Src/stm32l4xx_it.c **** }
 508              		.loc 1 353 1 is_stmt 0 view .LVU62
 509 0008 08BD     		pop	{r3, pc}
 510              	.L47:
 511 000a 00BF     		.align	2
 512              	.L46:
 513 000c 00000000 		.word	hspi3
 514              		.cfi_endproc
 515              	.LFE149:
 517              		.text
 518              	.Letext0:
 519              		.file 2 "c:\\tools\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-none
 520              		.file 3 "c:\\tools\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-none
 521              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l475xx.h"
 522              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 523              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 524              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 525              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 526              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 527              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_it.c
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:20     .text.NMI_Handler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:26     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:44     .text.HardFault_Handler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:67     .text.MemManage_Handler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:90     .text.BusFault_Handler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:113    .text.UsageFault_Handler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:136    .text.SVC_Handler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:142    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:155    .text.DebugMon_Handler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:161    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:174    .text.PendSV_Handler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:180    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:193    .text.SysTick_Handler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:199    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:219    .text.DMA1_Channel2_IRQHandler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:225    .text.DMA1_Channel2_IRQHandler:00000000 DMA1_Channel2_IRQHandler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:245    .text.DMA1_Channel2_IRQHandler:0000000c $d
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:250    .text.DMA1_Channel3_IRQHandler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:256    .text.DMA1_Channel3_IRQHandler:00000000 DMA1_Channel3_IRQHandler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:276    .text.DMA1_Channel3_IRQHandler:0000000c $d
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:281    .text.DMA1_Channel4_IRQHandler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:287    .text.DMA1_Channel4_IRQHandler:00000000 DMA1_Channel4_IRQHandler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:307    .text.DMA1_Channel4_IRQHandler:0000000c $d
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:312    .text.DMA1_Channel5_IRQHandler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:318    .text.DMA1_Channel5_IRQHandler:00000000 DMA1_Channel5_IRQHandler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:338    .text.DMA1_Channel5_IRQHandler:0000000c $d
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:343    .text.EXTI9_5_IRQHandler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:349    .text.EXTI9_5_IRQHandler:00000000 EXTI9_5_IRQHandler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:382    .text.SPI2_IRQHandler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:388    .text.SPI2_IRQHandler:00000000 SPI2_IRQHandler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:408    .text.SPI2_IRQHandler:0000000c $d
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:413    .text.USART3_IRQHandler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:419    .text.USART3_IRQHandler:00000000 USART3_IRQHandler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:439    .text.USART3_IRQHandler:0000000c $d
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:444    .text.EXTI15_10_IRQHandler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:450    .text.EXTI15_10_IRQHandler:00000000 EXTI15_10_IRQHandler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:487    .text.SPI3_IRQHandler:00000000 $t
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:493    .text.SPI3_IRQHandler:00000000 SPI3_IRQHandler
C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s:513    .text.SPI3_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_usart3_tx
hdma_usart3_rx
hdma_usart1_tx
hdma_usart1_rx
HAL_GPIO_EXTI_IRQHandler
HAL_SPI_IRQHandler
hspi2
HAL_UART_IRQHandler
ARM GAS  C:\Users\imkar\AppData\Local\Temp\ccda9cpx.s 			page 17


huart3
hspi3
